apiVersion: v1
data:
  API_ENV_STATE: prod
  API_GITHUB__WORKFLOW_CUSTOMERS: add-customer.yml
  API_GITHUB__WORKFLOW_REF: main
  API_GITHUB__WORKFLOW_REPO: enableops/terraform
  API_GITHUB__WORKFLOW_TERRAFORM: terraform.yaml
  API_OAUTH__ACCESS_TYPE: offline
  API_OAUTH__AUTH_URI: https://accounts.google.com/o/oauth2/auth
  API_OAUTH__PROMPT_TYPE: consent
  API_OAUTH__REDIRECT_HOST: https://api.enableops.io
  API_OAUTH__SCOPES: openid,https://www.googleapis.com/auth/userinfo.profile,https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/cloudplatformprojects.readonly
  API_OAUTH__SWAGGER_REDIRECT_PATH: /docs/oauth2-redirect
  API_OAUTH__TOKEN_URI: https://accounts.google.com/o/oauth2/token
  API_PATH__AUTH_MODULE: /auth
  API_PATH__AUTH_REDIRECT: /start
  API_PATH__AUTH_TOKEN: /access_token
  API_PROJECT_NAME: enableOps API
  API_SECURITY__ACCESS_TOKEN_EXPIRE_MINUTES: "20160"
  API_SECURITY__BACKEND_CORS_ORIGINS: https://enableops.io
  API_SECURITY__JWT_ALGORITHM: HS256
  litestream.yml: |-
    dbs:
      - path: /usr/src/app/.data/api.db
        replicas:
          - url: gcs://enableops-api-database/api.db
kind: ConfigMap
metadata:
  name: api-config
  namespace: api
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api
  namespace: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  serviceName: api-service
  volumeClaimTemplates:
  - metadata:
      name: database
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Mi
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - name: init-litestream
        image: litestream/litestream:0.3.8
        args: ['restore', '-if-db-not-exists', '-if-replica-exists', '-v', '/usr/src/app/.data/api.db']
        volumeMounts:
        - name: database
          mountPath: /usr/src/app/.data
        - name: config
          mountPath: /etc/litestream.yml
          subPath: litestream.yml
        - name: gcs-credentials
          mountPath: /usr/src/app/gcs
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /usr/src/app/gcs/credentials.json
      volumes:
      - name: config
        configMap:
          name: api-config
      - name: gcs-credentials
        secret:
          secretName: litestream-credentials
          items:
          - key: litestream-credentials.json
            path: credentials.json
      containers:
      - env:
        - name: API_DB__URI
          value: "sqlite:///.data/api.db"
        envFrom:
        - configMapRef:
            name: api-config
        - secretRef:
            name: api-secret
        image: eu.gcr.io/enableops-io/api:0.10.0
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: database
          mountPath: /usr/src/app/.data
      - name: litestream
        image: litestream/litestream:0.3.8
        args: ['replicate']
        volumeMounts:
        - name: database
          mountPath: /usr/src/app/.data
        - name: config
          mountPath: /etc/litestream.yml
          subPath: litestream.yml
        - name: gcs-credentials
          mountPath: /usr/src/app/gcs
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /usr/src/app/gcs/credentials.json
        ports:
        - name: metrics
          containerPort: 9090